Продакт-менеджер Василий попросил вас проанализировать завершенные уроки и ответить на следующие вопросы:
1. Какое число наших пользователей активно преподаёт или учится (в разрезе по роли)? Как меняются эти показатели из месяца в месяц?

SELECT
    Users.role,
    EXTRACT(MONTH FROM Lessons.scheduled_time) AS month_lesson,
    COUNT(DISTINCT CASE WHEN Users.role = 'tutor' THEN Lessons.tutor_id ELSE Lessons.pupil_id END) AS active_users -- подсчет пользователей по роли
FROM
    Lessons
LEFT JOIN -- берем из таблицы Users данные по role пользователей для последующей группировки
    Users ON Lessons.pupil_id = Users.id OR Lessons.tutor_id = Users.id
WHERE
    Lessons.state = 'finished' -- берем только те занятия пользователей, которые были закончены
GROUP BY
    Users.role,
    EXTRACT(MONTH FROM Lessons.scheduled_time)
HAVING
    COUNT(Lessons.id) >= 10 -- при условии что активным пользователем считается тот, кто завершил 10 и более уроков в месяц
ORDER BY
    Users.role,
    month_lesson;

2. Сколько у нас преподавателей и учеников, которые не участвовали ещё ни в одном уроке? (прогул и отмена считается как участие)

SELECT 
    Users.role, 
    COUNT(*) AS empty_lessons
FROM 
    Lessons
LEFT JOIN -- берем role из таблицы Users, для последующей группировки
    Users AS pupil ON Lessons.pupil_id = pupil.id
LEFT JOIN 
    Users AS tutor ON Lessons.tutor_id = tutor.id
WHERE 
    Lessons.state IS NULL -- исключение пользователей, которые умеют статусы в state
GROUP BY 
    Users.role;

3. Сколько у каждого из преподавателя в среднем занятий в неделю (по месяцам)?

SELECT 
    tutor_id, 
    AVG(lessons_in_week) AS avg_lessons_in_week, 
    month 
FROM 
    (
        SELECT 
            tutor_id, 
            EXTRACT(WEEK FROM scheduled_time) AS week, 
            EXTRACT(MONTH FROM scheduled_time) AS month, 
            COUNT(*) AS lessons_in_week 
        FROM 
            Lessons
        GROUP BY 
            tutor_id, 
            week, 
            month
    ) AS tutor_lessons_in_week 
GROUP BY 
    tutor_id, 
    month;

4. Сколько уроков по каждому из предметов в месяц не состоялись по причине прогула учителя/ученика (по отдельности каждого + общее кол-во)?

SELECT
  subject,
  month,
  tutor_absence,
  pupil_absence,
  (tutor_absence + pupil_absence) AS total
FROM
  (
    SELECT
      subject,
      EXTRACT(MONTH FROM scheduled_time) AS month,
      SUM(CASE WHEN state = 'tutor_no_show' THEN 1 ELSE 0 END) AS tutor_absence,
      SUM(CASE WHEN state = 'pupil_no_show' THEN 1 ELSE 0 END) AS pupil_absence
    FROM
      Lessons
    GROUP BY
      subject,
      EXTRACT(MONTH FROM scheduled_time)
  ) AS subquery
ORDER BY
  subject,
  month;

5. По каждому предмету определить день недели, в который по этому предмету больше всего уроков + вывести это количество уроков.

SELECT 
    subject, 
    EXTRACT(DOW FROM scheduled_time) + 1 AS dow, -- забираем из данных день недели со смещением +1 (так как по умолчанию началом недели считается Воскресенье)
    COUNT(scheduled_time) AS dow_lessons, -- считаем количество занятий
    MAX(COUNT(scheduled_time)) OVER (PARTITION BY subject) AS max_lessons_per_dow -- выбираем максимальное значение по предмету, выделив для этого партиции
FROM 
    Lessons
GROUP BY 
    subject, 
    EXTRACT(DOW FROM scheduled_time) + 1;


6. Если в ноябре прирост составит 300 учеников, сколько нам нужно нанять преподавателей, чтобы сохранить на прежнем уровне (как в октябре) утилизацию преподавателей?
-
